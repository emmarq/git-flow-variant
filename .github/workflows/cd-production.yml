name: CD production

on:
  push:
    branches:
      - "main"
  release:
    types: [released]

  workflow_dispatch:

jobs:
  versioning: 
    if: github.event_name == "push"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      increment: ${{ steps.get-version.outputs.increment }}
      version_type: ${{ steps.get-version.outputs.version_type }}

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Git Version
        id: get-version
        uses: PaulHatch/semantic-version@v5.0.0-beta

      - name: Inspect version
        run: |
          echo "version: ${{ steps.get-version.outputs.version }}"
          echo "major: ${{ steps.get-version.outputs.major }}"
          echo "minor: ${{ steps.get-version.outputs.minor }}"
          echo "patch: ${{ steps.get-version.outputs.patch }}"
          echo "increment: ${{ steps.get-version.outputs.increment }}"
          echo "version_type: ${{ steps.get-version.outputs.version_type }}"
          echo "version_tag: ${{ steps.get-version.outputs.version_tag }}"
          echo "authors: ${{ steps.get-version.outputs.authors }}"

      - name: Tag version
        run: |
          git tag ${{ steps.get-version.outputs.version_tag }}
          git push origin ${{ steps.get-version.outputs.version_tag }}

  android-ota-update:
    needs: versioning
    if: github.event_name == "push" && needs.versioning.outputs.version_type == 'patch'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: |
          echo "android ota update"
      - name: Set version environment variable
        run: |
          echo "version_name=${{ needs.versioning.outputs.version }}" >> $GITHUB_ENV
          echo "version_increment=${{ needs.versioning.outputs.increment }}" >> $GITHUB_ENV
          echo "version_code=$(echo "$(git rev-list --first-parent --count HEAD) - 1" | bc)" >> $GITHUB_ENV

      - name: Check version
        run: |
          echo "The version name to use is: ${{ env.version_name }}"
          echo "The version code to use is: ${{ env.version_code }}"
  
  ios-ota-update: 
    needs: versioning
    if: github.event_name == "push" && needs.versioning.outputs.version_type == 'patch'
    runs-on: macos-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "ios ota update"

      - name: Set version environment variable
        run: |
          echo "version_name=${{ needs.versioning.outputs.version }}" >> $GITHUB_ENV
          echo "version_increment=${{ needs.versioning.outputs.increment }}" >> $GITHUB_ENV
          echo "version_code=$(echo "$(git rev-list --first-parent --count HEAD) - 1" | bc)" >> $GITHUB_ENV
 
      - name: Check version
        run: |
          echo "The version name to use is: ${{ env.version_name }}"
          echo "The version code to use is: ${{ env.version_code }}"

  android-store-update: 
    if: github.event_name == "release"
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "android store update"
      
      - name: Set version environment variable
        run: |
          echo "version_name=$(echo "${{ github.event.release.tag_name }}" | sed 's/production\/v//g')" >> $GITHUB_ENV
          echo "version_code=$(echo "$(git rev-list --first-parent --count HEAD) - 1" | bc)" >> $GITHUB_ENV
     
      - name: Check version
        run: |
          echo "The version name to use is: ${{ env.version_name }}"
          echo "The version code to use is: ${{ env.version_code }}"

  ios-store-update: 
    if: github.event_name == "release"
    runs-on: macos-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "ios store update"
      
      - name: Set version environment variable
        run: |
          echo "version_name=$(echo "${{ github.event.release.tag_name }}" | sed 's/production\/v//g')" >> $GITHUB_ENV
          echo "version_code=$(echo "$(git rev-list --first-parent --count HEAD) - 166" | bc)" >> $GITHUB_ENV

      - name: Check version
        run: |
          echo "The version name to use is: ${{ env.version_name }}"
          echo "The version code to use is: ${{ env.version_code }}"